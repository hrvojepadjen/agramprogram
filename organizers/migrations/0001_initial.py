# Generated by Django 5.1.3 on 2024-11-22 20:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the organizer type.', max_length=255, verbose_name='Type Name')),
            ],
            options={
                'verbose_name': 'Organizer Type',
                'verbose_name_plural': 'Organizer Types',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the organizer.', max_length=255, verbose_name='Name')),
                ('events', models.TextField(blank=True, help_text='Events organized by this organizer.', null=True, verbose_name='Events')),
                ('location', models.CharField(blank=True, help_text='The address of the organizer.', max_length=255, null=True, verbose_name='Location')),
                ('contact_email', models.EmailField(blank=True, help_text='The contact email for the organizer.', max_length=254, null=True, verbose_name='Contact Email')),
                ('has_parking', models.BooleanField(default=False, help_text='Indicates whether the organizer provides parking.', verbose_name='Has Parking')),
                ('pet_friendly', models.BooleanField(default=False, help_text='Indicates whether pets are allowed.', verbose_name='Pet Friendly')),
                ('wheelchair_accessible_entry', models.BooleanField(default=False, help_text='Indicates whether the entry is accessible for wheelchairs.', verbose_name='Wheelchair Accessible Entry')),
                ('wheelchair_accessible_wc', models.BooleanField(default=False, help_text='Indicates whether restrooms are accessible for wheelchairs.', verbose_name='Wheelchair Accessible Restroom')),
                ('logo_url', models.URLField(blank=True, help_text="The URL of the organizer's logo.", null=True, verbose_name='Logo URL')),
                ('user', models.CharField(blank=True, help_text='The user associated with this organizer.', max_length=255, null=True, verbose_name='Associated User')),
                ('organizer_type', models.ForeignKey(help_text='The type of the organizer.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizers.organizertype', verbose_name='Organizer Type')),
            ],
            options={
                'verbose_name': 'Organizer',
                'verbose_name_plural': 'Organizers',
            },
        ),
    ]
