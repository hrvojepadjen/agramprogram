# Generated by Django 5.1.3 on 2024-11-22 21:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0003_agegroup'),
        ('organizers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the event.', max_length=255, verbose_name='Event Name')),
                ('description', models.TextField(help_text='A detailed description of the event.', verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='A detailed description of the event in English.', null=True, verbose_name='Description (English)')),
                ('location', models.CharField(help_text='The location where the event will be held.', max_length=255, verbose_name='Location')),
                ('start_datetime', models.DateTimeField(help_text='The starting date and time of the event.', verbose_name='Start Date & Time')),
                ('end_datetime', models.DateTimeField(blank=True, help_text='The ending date and time of the event.', null=True, verbose_name='End Date & Time')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='The price of admission (optional).', max_digits=10, null=True, verbose_name='Price')),
                ('tickets_available', models.PositiveIntegerField(blank=True, help_text='The number of tickets available for the event.', null=True, verbose_name='Tickets Available')),
                ('registration_required', models.BooleanField(default=False, help_text='Indicates whether registration is required.', verbose_name='Registration Required')),
                ('registration_deadline', models.DateTimeField(blank=True, help_text='The deadline for registering for the event (optional).', null=True, verbose_name='Registration Deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The timestamp when the event was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The timestamp when the event was last updated.', verbose_name='Updated At')),
                ('categories', models.ManyToManyField(help_text='The categories this event belongs to (e.g., Music, Art).', to='events.category', verbose_name='Categories')),
                ('event_type', models.ForeignKey(help_text='The type of the event (e.g., Workshop, Play, Concert).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.eventtype', verbose_name='Event Type')),
                ('organizer', models.ForeignKey(help_text='The organizer responsible for this event.', on_delete=django.db.models.deletion.CASCADE, to='organizers.organizer', verbose_name='Organizer')),
                ('target_age_groups', models.ManyToManyField(help_text='The age groups targeted by this event (e.g., Children, Adults).', to='events.agegroup', verbose_name='Target Age Groups')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
    ]
